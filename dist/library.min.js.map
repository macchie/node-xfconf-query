{"version":3,"file":"library.min.js","sources":["../src/library.ts"],"sourcesContent":["import { exec } from 'child_process';\n\nexport default class XFConfQuery {\n\n  public static list(channel: string): string[] | void {\n    exec(this.getListCommand(channel), (error, stdout, stderr) => {\n      if (error) {\n        throw error;\n      }\n\n      if (stdout && stdout !== '') {\n        return stdout.split(\"\\n\")\n      } else {\n        return [];\n      }\n    });\n  }\n\n  public static read(channel: string, property: string): string | number | boolean | undefined | void {\n    exec(this.getReadCommand(channel, property), (error, stdout, stderr) => {\n      if (error) {\n        throw error;\n      }\n\n      if (stdout && stdout !== '') {\n        return stdout;\n      } else {\n        return undefined;\n      }\n    });\n  }\n\n  public static async write() {\n    console.log(`i can write`)\n  }\n\n  // private\n\n  private static getListCommand(channel: string): string {\n    return `xfconf-query -c ${channel} -l`;\n  }\n\n  private static getReadCommand(channel: string, property: string): string {\n    return `xfconf-query -c ${channel} -p ${property}`;\n  }\n}"],"names":["XFConfQuery","channel","exec","this","getListCommand","error","stdout","stderr","split","property","getReadCommand","console","log"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+BAEA,cA2CA,OAzCgBA,OAAd,SAAmBC,GACjBC,mBAAKC,KAAKC,eAAeH,IAAU,SAACI,EAAOC,EAAQC,GACjD,GAAIF,EACF,MAAMA,EAGR,OAAIC,GAAqB,KAAXA,EACLA,EAAOE,MAAM,MAEb,QAKCR,OAAd,SAAmBC,EAAiBQ,GAClCP,mBAAKC,KAAKO,eAAeT,EAASQ,IAAW,SAACJ,EAAOC,EAAQC,GAC3D,GAAIF,EACF,MAAMA,EAGR,OAAIC,GAAqB,KAAXA,EACLA,OAEP,OAKcN,QAApB,uGACEW,QAAQC,IAAI,0BAKCZ,iBAAf,SAA8BC,GAC5B,OAAO,mBAAmBA,SAGbD,iBAAf,SAA8BC,EAAiBQ,GAC7C,OAAO,mBAAmBR,SAAcQ;;;;;;;;"}